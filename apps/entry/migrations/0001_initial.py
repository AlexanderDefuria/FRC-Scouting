# Generated by Django 2.2 on 2020-03-25 01:03

import apps.entry.models
import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(default='NA')),
                ('FIRST_key', models.TextField(default='NA')),
                ('FIRST_eventType', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('start', models.DateField(default=datetime.date(2020, 1, 1), validators=[django.core.validators.MaxValueValidator(datetime.date(2020, 12, 31)), django.core.validators.MinValueValidator(datetime.date(2020, 1, 1))])),
                ('end', models.DateField(default=datetime.date(2020, 1, 1), validators=[django.core.validators.MaxValueValidator(datetime.date(2020, 12, 31)), django.core.validators.MinValueValidator(datetime.date(2020, 1, 1))])),
                ('imported', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_number', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(255), django.core.validators.MinValueValidator(0)])),
                ('event', models.CharField(default=' ', max_length=100)),
                ('match_type', models.TextField(default='NA', max_length=40)),
                ('red1', models.IntegerField(default=0, verbose_name=apps.entry.models.Team)),
                ('red2', models.IntegerField(default=0, verbose_name=apps.entry.models.Team)),
                ('red3', models.IntegerField(default=0, verbose_name=apps.entry.models.Team)),
                ('blue1', models.IntegerField(default=0, verbose_name=apps.entry.models.Team)),
                ('blue2', models.IntegerField(default=0, verbose_name=apps.entry.models.Team)),
                ('blue3', models.IntegerField(default=0, verbose_name=apps.entry.models.Team)),
                ('red_score', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(0)])),
                ('blue_score', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(0)])),
                ('name', models.CharField(default='team', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Pits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.TextField(default='NA')),
                ('event', models.CharField(default=' ', max_length=100)),
                ('motor_type', models.CharField(choices=[('none', "Doesn't Drive?"), ('cim', 'CIM Motors'), ('falcon', 'Falcon 500 Motors'), ('neo', 'NEO Motors'), ('other', 'Unusual DriveTrain... See Comments')], default='none', max_length=6)),
                ('motor_number', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(8), django.core.validators.MinValueValidator(0)])),
                ('weight', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(150), django.core.validators.MinValueValidator(0)])),
                ('images', models.TextField(default='No Images Yet')),
                ('comments', models.TextField(default='No Comments')),
                ('team', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='entry.Team')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(default=' ', max_length=100)),
                ('match_number', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(255), django.core.validators.MinValueValidator(0)])),
                ('auto_start', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('preloaded_balls', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(4), django.core.validators.MinValueValidator(0)])),
                ('on_field', models.BooleanField(default=True)),
                ('outer_auto', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('lower_auto', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('inner_auto', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('baseline', models.BooleanField(default=False)),
                ('fouls_auto', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25), django.core.validators.MinValueValidator(0)])),
                ('rating_auto', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('outer', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('lower', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('inner', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('wheel_rating', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('balls_collected', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('full_cycles', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('fouls', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25), django.core.validators.MinValueValidator(0)])),
                ('defense_time', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(135000), django.core.validators.MinValueValidator(0)])),
                ('defense_rating', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('defense_fouls', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(25), django.core.validators.MinValueValidator(0)])),
                ('climb_time', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(55000), django.core.validators.MinValueValidator(0)])),
                ('climb_location', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(-100)])),
                ('climb_attempts', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('initial_comments', models.TextField(default='')),
                ('game_comments', models.TextField(default='')),
                ('team', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='entry.Team')),
            ],
        ),
    ]
